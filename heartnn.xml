<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.heartnn.com</id>
    <title>heartnn的自留地</title>
    <updated>2024-07-02T05:44:22.759Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <icon>https://www.heartnn.com/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[mp4文件加入字幕显示]]></title>
        <id>https://www.heartnn.com/2024/06/24/mp4-add-subtitle/</id>
        <link href="https://www.heartnn.com/2024/06/24/mp4-add-subtitle/"/>
        <updated>2024-06-24T17:44:27.858Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2024/06/24/mp4-add-subtitle/">mp4文件加入字幕显示</a></h2></header><section class="post-excerpt"><p></p><p>众所周知，<a href="https://mkvtoolnix.download/">MKVToolNix</a>可以为mkv文件加入多种字幕，但到了mp4，内嵌字幕会变的比较麻烦。起因是从Youtube下载了一部MV，由于音视频和字幕是分开下载的，而且下载的是AV1编码，就想着不要重新打包mkv，而是直接在mp4中嵌入字幕。</p><p>首先说原理，PotPlayer是可以识别到Codec ID为<code>tx3g</code>标签的字幕，<code>tx3g</code>是用于3GPP/MPEG时期的带有时间标记的文本，我们要利用这个特性，让字幕显示为<code>tx3g</code>，这样一般的播放器就都可以识别了。实现起来比较简单的方式就是使srt或者ttxt(<a href="https://wiki.gpac.io/xmlformats/TTXT-Format-Documentation/">GPAC Timed Text XML</a>)会通过MP4Box直接显示为<code>tx3g</code>。</p><p>先将下载的字幕（我下载到的是webvtt格式）转换为srt，webvtt转换为srt比较简单，没有工具的情况下，作为文本文件打开，把标记WEBVTT文件头删掉就可以了。</p><p>然后通过下面的代码直接mux即可：</p><a class="read-more" href="/2024/06/24/mp4-add-subtitle/">»</a><p></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/mp4box/">#mp4box</a>
<time class="post-date" datetime="2024-06-24T16:08:20+08:00">2024-06-24</time></footer>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用MP4Box解出tx3g格式字幕]]></title>
        <id>https://www.heartnn.com/2022/12/09/mp4-subtitle-usage/</id>
        <link href="https://www.heartnn.com/2022/12/09/mp4-subtitle-usage/"/>
        <updated>2022-12-09T13:15:59.743Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2022/12/09/mp4-subtitle-usage/">利用MP4Box解出tx3g格式字幕</a></h2></header><section class="post-excerpt"><p></p><p>首先说明的是，<a href="https://mkvtoolnix.download/">MKVToolNix</a>无法加载tx3g格式的字幕，这种字幕一般封装在mp4文件中，以网上下载的居多。另外用<a href="https://github.com/nilaoda/BBDown">BBDown</a>下载的bilibili视频如果带字幕的话，也是这种格式。</p><p>以某集电视剧为例，文件名：<code>IRIS.S02E01.2013.WEB-DL.1080p.H265.AAC-Xiaomi.mp4</code></p><p>首先需要了解字幕文件所在的轨道号：</p><a class="read-more" href="/2022/12/09/mp4-subtitle-usage/">»</a><p></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/mp4box/">#mp4box</a>
<time class="post-date" datetime="2022-12-09T16:08:20+08:00">2022-12-09</time></footer>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[OpenWrt中MosDNS配置]]></title>
        <id>https://www.heartnn.com/2022/05/25/config-mosdns-in-openwrt/</id>
        <link href="https://www.heartnn.com/2022/05/25/config-mosdns-in-openwrt/"/>
        <updated>2022-12-09T00:59:14.343Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2022/05/25/config-mosdns-in-openwrt/">OpenWrt中MosDNS配置</a></h2></header><section class="post-excerpt"><p></p><p>请配合luci-app-mosdns包的自定义配置食用，本配置修改自官方配置luci-app-mosdns包的配置，兼顾了IPv6的功能，但不会碰到那种客户端解析IPv6优先导致超时连接的恶心情况。</p><p>使用时注意一下几点，避免踩坑：</p><ol><li>端口号如果不是5335的需要自行修改。</li><li>配置里的DNS可以使用UDP、DOH、DOT连接，使用DOH和DOT时第一个DNS尽量使用IP，如果一定要使用域名，请参考官方配置对应的IP地址，因为MosDNS可能不能直接解析域名。</li><li>与Passwall的配合使用，需要将Passwall的远程DNS设置为<code>127.0.0.1:5335</code>或者你的自定义端口号。</li><li>保证配置中提到的文件可用，除了luci-app-mosdns包，还需要安装v2ray，安装了Passwall的会自动安装v2ray依赖。</li></ol><p>以下是<code>/etc/mosdns/cus_config.yaml</code>的内容：</p><a class="read-more" href="/2022/05/25/config-mosdns-in-openwrt/">»</a><p></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/openwrt/">#openwrt</a>
,
<a href="https://www.heartnn.com/tags/dns/">#dns</a>
<time class="post-date" datetime="2022-05-25T09:47:08+08:00">2022-05-25</time></footer>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决群晖File Station中文拼音排序问题]]></title>
        <id>https://www.heartnn.com/2021/11/17/synology-file-station-sort-by-pinyin/</id>
        <link href="https://www.heartnn.com/2021/11/17/synology-file-station-sort-by-pinyin/"/>
        <updated>2022-12-09T00:59:14.344Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2021/11/17/synology-file-station-sort-by-pinyin/">解决群晖File Station中文拼音排序问题</a></h2></header><section class="post-excerpt"><p></p><p>方法来自：<a href="https://blog.icedream.xyz/2020/01/01/%E7%A0%B4%E8%A7%A3%E7%BE%A4%E6%99%96file-station%E4%B8%AD%E6%96%87%E6%9C%AA%E6%8C%89%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E9%97%AE%E9%A2%98/">https://blog.icedream.xyz/2020/01/01/破解群晖file-station中文未按拼音排序问题/</a></p><p>以下基于DSM 6.23-25426 Update 3 (x64)</p><p>涉及修改文件为<code>/usr/lib/libsynocore.so.6</code>。</p><p><code>ucol_open</code>涉及到以下代码位置：</p><pre tabindex="0"><code>LOAD:000000000001650F                 lea     rsi, [rsp+28h+var_1C]
LOAD:0000000000016514                 lea     rdi, aPStartAddress+12h ; ""
LOAD:000000000001651B                 call    _ucol_open
</code></pre><p>具体修改操作：</p><ol><li>将<code>48 8D 3D 78 A9 00 00</code>替换成<code>48 8D 3D 7B AF 00 00</code>。</li><li>查找字符串<code>string_join.c</code>，并替换成<code>string_joinzh</code>。</li></ol><p>结论：这样修改完成后，在File Station中按拼音排序时，中文目录会排列到所有英文目录前。</p><a class="read-more" href="/2021/11/17/synology-file-station-sort-by-pinyin/">»</a><p></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/synology/">#synology</a>
<time class="post-date" datetime="2021-11-17T12:18:42+08:00">2021-11-17</time></footer>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cloudreve迁移到MySQL]]></title>
        <id>https://www.heartnn.com/2021/11/02/cloudreve-config-mysql-and-redis/</id>
        <link href="https://www.heartnn.com/2021/11/02/cloudreve-config-mysql-and-redis/"/>
        <updated>2022-12-09T00:59:14.344Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2021/11/02/cloudreve-config-mysql-and-redis/">Cloudreve迁移到MySQL</a></h2></header><section class="post-excerpt"><p></p><h3 id="环境--起因">环境 &amp; 起因</h3><ul><li>系统：Debian 10</li><li>硬件：1 vCPU 512MB</li><li>Cloudreve软件版本：3.3.2 with SQLite</li></ul><p>随着文件数的增加，SQLite速度和稳定性都差一些，而且数据库文件越来越大，虽然网盘就我一个人在用，崩了可以重新装，但还是秉着一劳永逸的原则，开始了迁移工作。</p><a class="read-more" href="/2021/11/02/cloudreve-config-mysql-and-redis/">»</a><p></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/sqlite/">#sqlite</a>
,
<a href="https://www.heartnn.com/tags/mysql/">#mysql</a>
,
<a href="https://www.heartnn.com/tags/redis/">#redis</a>
<time class="post-date" datetime="2021-11-02T07:46:23+08:00">2021-11-02</time></footer>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[自编译基于Python的钉钉内网穿透(ngrok)]]></title>
        <id>https://www.heartnn.com/2021/10/29/dingtalk-python-ngrok/</id>
        <link href="https://www.heartnn.com/2021/10/29/dingtalk-python-ngrok/"/>
        <updated>2022-12-09T00:59:14.360Z</updated>
        <content type="html"><![CDATA[<header class="post-header"><h2 class="post-title"><a href="/2021/10/29/dingtalk-python-ngrok/">自编译基于Python的钉钉内网穿透(ngrok)</a></h2></header><section class="post-excerpt"><p>源代码来自于hauntek/python-ngrok，自己又从dingtalk/ngrok中提取了源码进行比对，然后用pyinstaller编译而来。
用起来还是相当稳定的，虽然似乎只能穿透http，但是能穿透一个群晖的DSM就足够了，建议应急的时候用一下。
下载地址：https://github.com/heartnn/dingtalk-ngrok/releases/latest，包含Windows和Linux的版本。
更新日志： 20220407：修复在群晖下的依赖问题 <a class="read-more" href="/2021/10/29/dingtalk-python-ngrok/">»</a></p></section><footer class="post-meta"><img class="author-thumb nopin" src="/images/logo.png" alt="Author image">
heartnn
on
<a href="https://www.heartnn.com/tags/python/">#python</a>
,
<a href="https://www.heartnn.com/tags/nat/">#nat</a>
<time class="post-date" datetime="2021-10-29T15:32:16+08:00">2021-10-29</time></footer>]]></content>
    </entry>
</feed>